@model IEnumerable<FoundItem>
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Index";
}
@{ 
    Layout = "_LayoutUser";
}


<p>
    <a asp-action="Create" asp-route-id="">Create New</a>
</p>
@if (Model.Count() == 0 || Model == null)
{
    <Div><h4>No Found Items </h4> </Div>
}
else
{
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.NameOfFoundItem)
            </th>
            <th>
                Local Government
            </th>
            <th>
                Community Found
            </th>
            <th>
                Date Found
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsClaimed)

            </th>
            <th>
                Claims
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.NameOfFoundItem)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LocalGovernment.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExactArea)
            </td>
            <td>
                @item.DateFound.ToShortDateString()
            </td>

            @{if (item.IsClaimed == true)
                {
                    <td>  Closed </td>}
                else
                {
                    <td> Pending </td>}
            }

            <td>
                <a asp-action="FoundItemClaims" asp-route-id="@item.Id" class="btn btn-info" role="button">@item.FoundItemClaims.Count</a>
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>}
